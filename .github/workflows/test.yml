name: UI Tests

on:
  workflow_dispatch:
    inputs:
      run_notebook:
        description: Run interaction and accessibility tests
        type: boolean
        default: true
        required: false 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NODE_VERSION: 18.x

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm ci
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
  
  jest-unit-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: restore-node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.restore-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: run tests
        run: npm run test

  build-storybook:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Build Storybook
        run: npm run build-storybook
      - name: Cache Storybook
        uses: actions/cache@v3
        with:
          path: |
            **/storybook-static
          key: ${{ runner.os }}-storybook-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-storybook-

  interaction-and-accessibility-tests:
    runs-on: ubuntu-latest
    needs: [ install-dependencies, build-storybook ]
    if: github.event.inputs.run_notebook == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Restore npm cache
        uses: actions/cache@v3
        id: restore-node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.restore-node_modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Restore storybook cache
        uses: action/cache@v3
        id: restore-storybook
        with:
          path: |
            **/storybook-static
          key: ${{ runner.os }}-storybook-${{ hashFiles('**/package-lock.json') }}
      - name: Install playwright
        run: npm i playwright
      - name: Build storybook
        if: steps.restore-storybook.outputs.cache-hit != 'true'
        run: npm run build-storybook
      - name: Serve Storybook and run tests
        run: npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on tcp:6006 && npm run test-storybook -- --url http://127.0.0.1:6006"